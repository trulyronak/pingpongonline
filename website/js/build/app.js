/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/Ball.js":
/*!********************!*\
  !*** ./js/Ball.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ball\": () => (/* binding */ Ball)\n/* harmony export */ });\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket.js */ \"./js/socket.js\");\n/* harmony import */ var _Sound_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Sound.js */ \"./js/Sound.js\");\n\n\n\nconst utils = __webpack_require__(/*! ./utils.js */ \"./js/utils.js\");\nclass Ball {\n  constructor(ctx, board, x, y, z, soundsDiv) {\n    this.ctx = ctx;\n    this.board = board;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    this.r = (10 / 400) * this.board.width;\n    // this.dx = 1 / 400 * this.board.width;\n    // this.dy = 3 / 400 * this.board.width;\n    // this.dz = 5 / 400 * this.board.width;\n\n    this.dx = 0;\n    this.dy = 0;\n    this.dz = 0;\n\n    this.maxY = this.board.y;\n    this.effectAlpha = 0;\n\n    this.shadowY = this.board.y;\n    this.bounceCount = 0;\n    this.opponentBounceCount = 0;\n    this.soundsDiv = soundsDiv;\n    this.bounceSound = new _Sound_js__WEBPACK_IMPORTED_MODULE_1__.Sound(\"sounds/bounce.mp3\", this.soundsDiv);\n    document.body.appendChild(this.soundsDiv);\n\n    _socket_js__WEBPACK_IMPORTED_MODULE_0__.socket.on(\"recieveballupdate\", room => {\n      console.log(\"we got an update!\")\n      if (_socket_js__WEBPACK_IMPORTED_MODULE_0__.primarySet && _socket_js__WEBPACK_IMPORTED_MODULE_0__.isPrimary) {\n        return;\n      }\n      if (room.name !== _socket_js__WEBPACK_IMPORTED_MODULE_0__.roomName) {\n        return; // nani backend\n      }\n      const ballPosition = { room };\n      console.log(\"setting ball position\")\n      this.x = ballPosition.x;\n      this.y = ballPosition.y;\n      this.z = ballPosition.z;\n    })\n  }\n\n  draw() {\n    this.center2d = utils.PROJECTOR.get2d(this.x, this.y, this.z);\n    this.shadow = utils.PROJECTOR.get2d(this.x, this.maxY, this.z);\n    let radius2d = utils.PROJECTOR.get2dLength(this.r, this.z);\n\n    if (\n      this.board.checkPointBound(this.center2d.x2d, this.center2d.y2d, this.y)\n    ) {\n      return 0;\n    }\n\n    //shadow\n    this.ctx.beginPath();\n    this.ctx.arc(\n      this.shadow.x2d,\n      this.shadow.y2d,\n      Math.abs(radius2d),\n      0,\n      Math.PI * 2\n    );\n    this.ctx.fillStyle = \"rgba(68,68,68,0.8)\";\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    //ball\n    this.ctx.beginPath();\n    this.ctx.arc(\n      this.center2d.x2d,\n      this.center2d.y2d,\n      Math.abs(radius2d),\n      0,\n      Math.PI * 2\n    );\n    this.ctx.fillStyle = \"#f4d443\";\n    this.ctx.fill();\n    this.strokeStyle = \"#837d66\";\n    // this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  reflect(dxOther, dzOther) {\n    if (Math.abs(dzOther) > 15) {\n      this.dz = (dzOther / Math.abs(dzOther)) * 15;\n    } else if (\n      dzOther == 0 &&\n      this.z < this.board.length &&\n      this.x < this.board.width &&\n      this.x > -this.board.width\n    ) {\n      this.dz = -15;\n    } else {\n      this.dz = dzOther;\n    }\n\n    this.dx = 0.13 * dxOther;\n    // this.dx = dxOther * 0.1;\n    this.maxY = this.board.y;\n  }\n  bounce() {\n    while (this.soundsDiv.children.length != 0) {\n      this.soundsDiv.removeChild(this.soundsDiv.children[0]);\n    }\n    this.dy = -this.dy;\n    this.bounceSound = new _Sound_js__WEBPACK_IMPORTED_MODULE_1__.Sound(\"sounds/bounce.mp3\", this.soundsDiv);\n    this.bounceSound.play();\n  }\n  sideCheck() {\n    this.dx = -this.dx;\n  }\n\n  fall() {\n    this.maxY = 600;\n  }\n  rise() {\n    this.maxY = this.board.y - this.r;\n  }\n\n  updatePosition() {\n    if (_socket_js__WEBPACK_IMPORTED_MODULE_0__.primarySet && !_socket_js__WEBPACK_IMPORTED_MODULE_0__.isPrimary) {\n      return;\n    }\n    this.x += this.dx;\n    this.y += this.dy;\n    this.z += this.dz;\n\n    // if (this.x > this.board.x + this.board.width - this.r) {\n    // this.sideCheck();\n    // }\n    // if (this.x < this.board.x - this.board.width - this.r) {\n    //   this.sideCheck();\n    // }\n    if (\n      this.z - this.r < this.board.netPosition &&\n      this.z + this.r > this.board.netPosition &&\n      this.x > -this.board.width &&\n      this.x < this.board.width &&\n      this.y < this.board.y &&\n      this.y > this.board.netHeight\n    ) {\n      this.y -= 10;\n      this.reflect(this.dx, -this.dz);\n    }\n\n    if (this.y > this.maxY - this.r) {\n      if (this.z < this.board.netPosition) {\n        this.bounceCount++;\n      }\n      if (this.z > this.board.netPosition) {\n        this.opponentBounceCount++;\n      }\n      this.y -= this.r;\n      this.bounce();\n    }\n\n    if (\n      this.z < this.board.z ||\n      this.z > this.board.z + this.board.length ||\n      this.x < -this.board.width ||\n      this.x > this.board.width\n    ) {\n      this.fall();\n    } else {\n      this.rise();\n    }\n\n    if (_socket_js__WEBPACK_IMPORTED_MODULE_0__.primarySet && _socket_js__WEBPACK_IMPORTED_MODULE_0__.isPrimary) {\n      // we control da ball\n      (0,_socket_js__WEBPACK_IMPORTED_MODULE_0__.sendBallPosition)({x: this.x, y: this.y, z: this.z});\n    }\n  }\n\n  showEffect(x, y, z) {\n    let point2d = utils.PROJECTOR.get3d(this.x, this.y, this.z);\n    this.ctx.arc(this.center2d.x2d, this.center2d.y2d, 20, 20, 0, Math.PI * 2);\n    this.ctx.fillStyle = \"rgba(0,0,0,\" + this.effectAlpha + \")\";\n    this.ctx.fill();\n\n    // if (this.z < -100) this.reflect();\n    // if (this.z > this.board.length) {\n    //   this.bounceCount = 0;\n    //   console.log(\"board oppo\");\n    //   this.reflect(this.dz * 1.25);\n    // }\n  }\n}\n\n\n//# sourceURL=webpack://js-table-tennis/./js/Ball.js?");

/***/ }),

/***/ "./js/Bat.js":
/*!*******************!*\
  !*** ./js/Bat.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bat\": () => (/* binding */ Bat)\n/* harmony export */ });\nconst utils = __webpack_require__(/*! ./utils.js */ \"./js/utils.js\")\nclass Bat {\n  constructor(canvas, ctx, board) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.board = board;\n    this.x = 0;\n    this.y = this.board.y - 100;\n    this.z = -10;\n    this.r = 5 * 10 / 400 * this.board.width;\n\n    this.lastX = 0\n    this.lastZ = 0;\n    this.dx = 0;\n    this.dz = 0;\n    this.mouseX = 0;\n    this.mouseY = 0;\n\n    this.isOpponent= false;\n\n    console.log(\"wowww new bat made\")\n\n  }\n  drawBat(hasServed) {\n\n\n    // if(this.isOpponent && this.x < this.board.x - this.board.width) this.x = this.board.x - this.board.width\n    // if(this.isOpponent && this.x > this.board.x + this.board.width) this.x = this.board.x + this.board.width\n    // if (this.z < -25) this.z = -25;\n    if (!this.isOpponent && Math.abs( this.z) > this.board.length/2) this.z = this.board.length/2;\n    if (this.isOpponent && Math.abs( this.z) < this.board.length/2) this.z = this.board.length/2;\n    this.point2d = utils.PROJECTOR.get2d(this.x, this.y, this.z);\n    this.dx = this.x - this.lastX;\n    this.dz = this.z - this.lastZ;\n\n    // this.ctx.save();\n    // this.ctx.translate(this.point2d.x2d,this.point2d.y2d)\n    // this.ctx.rotate(Math.PI);\n\n    this.ctx.beginPath();\n    // this.makeBatShadow();\n    this.makeBatPaddle(hasServed);\n    this.ctx.closePath();\n    this.lastX = this.x;\n    this.lastZ = this.z;\n    // console.log(this.dz);\n    // this.ctx.rotate(-Math.PI/2);\n    // this.ctx.translate(-this.point2d.x2d,-this.point2d.y2d)\n    // this.ctx.restore();\n  }\n  makeBatShadow(){\n\n  }\n  makeBatPaddle(hasServed) {\n    this.ctx.arc(this.point2d.x2d, this.point2d.y2d,Math.abs(utils.PROJECTOR.get2dLength( this.r,this.z)), Math.PI / 2, Math.PI * 2);\n    // this.ctx.fillStyle = \"#9c0710\";\n    if (hasServed) {\n      this.alpha = 1\n    }\n    else {\n      this.alpha = 0.5\n    }\n    this.ctx.fillStyle = \"rgba(156,7,16,\"+this.alpha+\")\";\n    this.ctx.fill();\n    this.ctx.closePath();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.point2d.x2d +utils.PROJECTOR.get2dLength(  this.r,this.z), this.point2d.y2d);\n    this.ctx.lineTo(this.point2d.x2d + utils.PROJECTOR.get2dLength( this.r,this.z), this.point2d.y2d + utils.PROJECTOR.get2dLength( 0.7 * this.r,this.z));\n    this.ctx.lineTo(this.point2d.x2d + utils.PROJECTOR.get2dLength( this.r + 0.4 * this.r,this.z), this.point2d.y2d +utils.PROJECTOR.get2dLength(  0.7 * this.r + 0.4 * this.r,this.z))\n    this.ctx.lineTo(this.point2d.x2d + utils.PROJECTOR.get2dLength( 0.7 * this.r + 0.4 * this.r,this.z), this.point2d.y2d + utils.PROJECTOR.get2dLength( this.r + 0.4 * this.r,this.z))\n    this.ctx.lineTo(this.point2d.x2d + utils.PROJECTOR.get2dLength( 0.7 * this.r,this.z), this.point2d.y2d +utils.PROJECTOR.get2dLength(  this.r,this.z))\n    this.ctx.lineTo(this.point2d.x2d, this.point2d.y2d + utils.PROJECTOR.get2dLength( this.r,this.z))\n    // this.ctx.fillStyle = \"#aa9f7f\";\n    this.ctx.fillStyle = \"rgba(235,185,145,\"+this.alpha+\")\";\n    this.ctx.fill();\n\n  }\n\n}\n\n\n//# sourceURL=webpack://js-table-tennis/./js/Bat.js?");

/***/ }),

/***/ "./js/Board.js":
/*!*********************!*\
  !*** ./js/Board.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Board\": () => (/* binding */ Board)\n/* harmony export */ });\nconst utils = __webpack_require__(/*! ./utils.js */ \"./js/utils.js\");\n\nclass Board {\n  constructor(canvas, ctx) {\n\n    this.canvas = canvas;\n    this.ctx = ctx;\n\n    this.x = 0;\n    this.y = 300;\n    this.z = 0;\n\n    //Dimensions of the board\n    this.width = this.canvas.width / 2 * 0.65; //xMax\n    this.thickness = 10 / 400 * this.canvas.width / 2; //yMax\n    this.length = 720 / 400 * this.canvas.width / 2; //zMax\n\n    this.netHeight = this.y - 55 / 400 * this.width;\n    this.netPosition = this.length / 2;\n\n    this.legLength = 300;\n\n    this.borderWidth = 10 / 400 * this.width;\n\n    this.frontLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y, this.z);\n    this.frontRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y, this.z);\n    this.backRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y, this.z + this.length);\n    this.backLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y, this.z + this.length);\n    this.frontLeftoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y, this.z);\n    this.frontLeftBottomPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y + this.thickness, this.z);\n    this.frontRightBottomPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y + this.thickness, this.z);\n    this.frontRightTopPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y, this.z);\n\n    this.middleRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y, this.z + this.netPosition);\n    this.middleRightTopPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.netHeight, this.z + this.netPosition);\n    this.middleLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y, this.z + this.netPosition);\n    this.middleLeftTopPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.netHeight, this.z + this.netPosition);\n\n    // this.singlePlayerMiddleRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y, this.z + this.netPosition);\n    // this.singlePlayerMiddleRightTopPoint2d = utils.PROJECTOR.get2d(this.x + this.width, this.y - this.length / 4, this.z + this.netPosition);\n    // this.singlePlayerMiddleLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y, this.z + this.netPosition);\n    // this.singlePlayerMiddleLeftTopPoint2d = utils.PROJECTOR.get2d(this.x - this.width, this.y - this.length / 4, this.z + this.netPosition);\n\n    this.innerSurfaceFrontLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width + this.borderWidth, this.y, this.z + this.borderWidth);\n    this.innerSurfaceFrontRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width - this.borderWidth, this.y, this.z + this.borderWidth);\n    this.innerSurfaceBackRightPoint2d = utils.PROJECTOR.get2d(this.x + this.width - this.borderWidth, this.y, this.z + this.length - this.borderWidth);\n    this.innerSurfaceBackLeftPoint2d = utils.PROJECTOR.get2d(this.x - this.width + this.borderWidth, this.y, this.z + this.length - this.borderWidth);\n    this.innerSurfaceFrontLeftoint2d = utils.PROJECTOR.get2d(this.x - this.width + this.borderWidth, this.y, this.z + this.borderWidth);\n\n    this.centerBorderFrontLeftPoint2d = utils.PROJECTOR.get2d(this.x - 5 / 400 * this.width, this.y, this.z);\n    this.centerBorderFrontRightPoint2d = utils.PROJECTOR.get2d(this.x + 5 / 400 * this.width, this.y, this.z);\n    this.centerBorderBackLeftPoint2d = utils.PROJECTOR.get2d(this.x - 5 / 400 * this.width, this.y, this.z + this.length);\n    this.centerBorderBackRightPoint2d = utils.PROJECTOR.get2d(this.x + 5 / 400 * this.width, this.y, this.z + this.length);\n\n    this.frontLeftLegLPoint2d = utils.PROJECTOR.get2d(this.x - 380 / 400 * this.width, this.y, this.z + 50 / 400 * this.width);\n    this.frontBottomLeftLegLPoint2d = utils.PROJECTOR.get2d(this.x - 380 / 400 * this.width, this.y + this.legLength, this.z + 50 / 400 * this.width);\n    this.frontLeftLegRPoint2d = utils.PROJECTOR.get2d(this.x - 360 / 400 * this.width, this.y, this.z + 50 / 400 * this.width);\n    this.frontBottomLeftLegRPoint2d = utils.PROJECTOR.get2d(this.x - 360 / 400 * this.width, this.y + this.legLength, this.z + 50 / 400 * this.width);\n\n    this.frontRightLegLPoint2d = utils.PROJECTOR.get2d(this.x + 380 / 400 * this.width, this.y, this.z + 50 / 400 * this.width);\n    this.frontBottomRightLegLPoint2d = utils.PROJECTOR.get2d(this.x + 380 / 400 * this.width, this.y + this.legLength, this.z + 50 / 400 * this.width);\n    this.frontRightLegRPoint2d = utils.PROJECTOR.get2d(this.x + 360 / 400 * this.width, this.y, this.z + 50 / 400 * this.width);\n    this.frontBottomRightLegRPoint2d = utils.PROJECTOR.get2d(this.x + 360 / 400 * this.width, this.y + this.legLength, this.z + 50 / 400 * this.width);\n\n\n    this.netSquare = new Image();\n    this.netSquare.src = 'images/netSquare.png';\n    this.netSquare.onload = () => {\n      this.netPattern = this.ctx.createPattern(this.netSquare, 'repeat');\n      this.ctx.fillStyle = this.netPattern;\n      // this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n\n    this.drawBoard();\n  }\n  drawBoard(isSingle) {\n\n    //leg drawing\n    this.ctx.beginPath();\n    //leg path\n    this.makeLeftLegs();\n    this.ctx.fillStyle = '#060402';\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.makeRightLegs();\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    //outer white surface drawing\n    this.ctx.beginPath();\n    //outer white surface path\n    this.makeOuterWhiteSurface();\n    this.ctx.stroke();\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fill();\n    this.ctx.closePath();\n    //inner surface drawing\n    this.ctx.beginPath();\n    //inner surface path\n    this.makeInnerSurface();\n    this.ctx.stroke();\n    this.ctx.fillStyle = \"#24529b\";\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    //center border drawing\n    this.ctx.beginPath();\n    //center border path\n    this.makeCenterBorder();\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    //board-thickness drawing\n    this.ctx.beginPath();\n    //board-thickness path\n    this.makeBoardThickness();\n    this.ctx.stroke();\n    this.ctx.fillStyle = \"#122c5f\";\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    //net drawing\n    this.ctx.beginPath();\n    //net path\n    this.makeNet();\n    this.ctx.fillStyle = this.netPattern;\n    this.ctx.fill();\n    this.ctx.closePath();\n\n\n\n\n  }\n  makeOuterWhiteSurface() {\n    this.ctx.moveTo(this.frontLeftPoint2d.x2d, this.frontLeftPoint2d.y2d);\n    this.ctx.lineTo(this.frontRightPoint2d.x2d, this.frontRightPoint2d.y2d);\n    this.ctx.lineTo(this.backRightPoint2d.x2d, this.backRightPoint2d.y2d);\n    this.ctx.lineTo(this.backLeftPoint2d.x2d, this.backLeftPoint2d.y2d);\n    this.ctx.lineTo(this.frontLeftoint2d.x2d, this.frontLeftoint2d.y2d);\n  }\n  makeNet() {\n    this.ctx.moveTo(this.middleLeftTopPoint2d.x2d, this.middleLeftTopPoint2d.y2d)\n    this.ctx.lineTo(this.middleRightTopPoint2d.x2d, this.middleRightTopPoint2d.y2d)\n    this.ctx.lineTo(this.middleRightTopPoint2d.x2d, this.middleRightPoint2d.y2d)\n    this.ctx.lineTo(this.middleLeftTopPoint2d.x2d, this.middleLeftPoint2d.y2d)\n  }\n  makeInnerSurface() {\n    //front-left point\n    this.ctx.moveTo(this.innerSurfaceFrontLeftPoint2d.x2d, this.innerSurfaceFrontLeftPoint2d.y2d);\n    //front-right point\n    this.ctx.lineTo(this.innerSurfaceFrontRightPoint2d.x2d, this.innerSurfaceFrontRightPoint2d.y2d);\n\n    //back-right point\n    this.ctx.lineTo(this.innerSurfaceBackRightPoint2d.x2d, this.innerSurfaceBackRightPoint2d.y2d);\n\n    //back-left point\n    this.ctx.lineTo(this.innerSurfaceBackLeftPoint2d.x2d, this.innerSurfaceBackLeftPoint2d.y2d);\n\n    //front-left point\n    this.ctx.lineTo(this.innerSurfaceFrontLeftoint2d.x2d, this.innerSurfaceFrontLeftoint2d.y2d);\n\n  }\n  makeCenterBorder() {\n\n    this.ctx.moveTo(this.centerBorderFrontLeftPoint2d.x2d, this.centerBorderFrontLeftPoint2d.y2d)\n    this.ctx.lineTo(this.centerBorderFrontRightPoint2d.x2d, this.centerBorderFrontRightPoint2d.y2d)\n    this.ctx.lineTo(this.centerBorderBackRightPoint2d.x2d, this.centerBorderBackRightPoint2d.y2d)\n    this.ctx.lineTo(this.centerBorderBackLeftPoint2d.x2d, this.centerBorderBackLeftPoint2d.y2d)\n\n  }\n  makeBoardThickness() {\n\n    this.ctx.moveTo(this.frontLeftPoint2d.x2d, this.frontLeftPoint2d.y2d);\n    //front-left-bottom point\n    this.ctx.lineTo(this.frontLeftBottomPoint2d.x2d, this.frontLeftBottomPoint2d.y2d);\n    //front-right-bottom point\n    this.ctx.lineTo(this.frontRightBottomPoint2d.x2d, this.frontRightBottomPoint2d.y2d);\n    //front-right-top point\n    this.ctx.lineTo(this.frontRightTopPoint2d.x2d, this.frontRightTopPoint2d.y2d);\n  }\n  makeOtherHalfVertical() {\n    this.ctx.moveTo(this.singlePlayerMiddleLeftPoint2d.x2d, this.singlePlayerMiddleLeftPoint2d.y2d);\n    this.ctx.lineTo(this.singlePlayerMiddleRightPoint2d.x2d, this.singlePlayerMiddleRightPoint2d.y2d);\n    this.ctx.lineTo(this.singlePlayerMiddleRightPoint2d.x2d, this.singlePlayerMiddleRightTopPoint2d.y2d);\n    this.ctx.lineTo(this.singlePlayerMiddleLeftPoint2d.x2d, this.singlePlayerMiddleLeftTopPoint2d.y2d);\n  }\n\n  makeLeftLegs() {\n    this.ctx.moveTo(this.frontLeftLegLPoint2d.x2d, this.frontLeftLegLPoint2d.y2d);\n    this.ctx.lineTo(this.frontBottomLeftLegLPoint2d.x2d, this.frontBottomLeftLegLPoint2d.y2d);\n    this.ctx.lineTo(this.frontBottomLeftLegRPoint2d.x2d, this.frontBottomLeftLegRPoint2d.y2d);\n    this.ctx.lineTo(this.frontLeftLegRPoint2d.x2d, this.frontLeftLegRPoint2d.y2d);\n\n  }\n\n  makeRightLegs() {\n    this.ctx.moveTo(this.frontRightLegLPoint2d.x2d, this.frontRightLegLPoint2d.y2d);\n    this.ctx.lineTo(this.frontBottomRightLegLPoint2d.x2d, this.frontBottomRightLegLPoint2d.y2d);\n    this.ctx.lineTo(this.frontBottomRightLegRPoint2d.x2d, this.frontBottomRightLegRPoint2d.y2d);\n    this.ctx.lineTo(this.frontRightLegRPoint2d.x2d, this.frontRightLegRPoint2d.y2d);\n\n  }\n\n  checkPointBound(x2d, y2d, y3d) {\n    let determinantLeftSide = (x2d - this.frontLeftoint2d.x2d) * (this.backLeftPoint2d.y2d - this.frontLeftoint2d.y2d) - (y2d - this.frontLeftoint2d.y2d) * (this.backLeftPoint2d.x2d - this.frontLeftoint2d.x2d);\n    let determinantRightSide = (x2d - this.frontRightPoint2d.x2d) * (this.backRightPoint2d.y2d - this.frontRightPoint2d.y2d) - (y2d - this.frontRightPoint2d.y2d) * (this.backRightPoint2d.x2d - this.frontRightPoint2d.x2d);\n    if (y2d > this.backLeftPoint2d.y2d && y2d < this.frontLeftoint2d.y2d && determinantLeftSide < 0 && determinantRightSide > 0 && y3d > this.y) {\n      return true;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://js-table-tennis/./js/Board.js?");

/***/ }),

/***/ "./js/Game.js":
/*!********************!*\
  !*** ./js/Game.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _Board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Board.js */ \"./js/Board.js\");\n/* harmony import */ var _Ball_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ball.js */ \"./js/Ball.js\");\n/* harmony import */ var _Bat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Bat.js */ \"./js/Bat.js\");\n/* harmony import */ var _Sound_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sound.js */ \"./js/Sound.js\");\n/* harmony import */ var _socket__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./socket */ \"./js/socket.js\");\n\n\n\n\n\n\nconst utils = __webpack_require__(/*! ./utils.js */ \"./js/utils.js\");\n\nclass Game {\n  constructor() {\n    this.canvas = document.getElementById(\"gameCanvas\");\n    // this.canvas.style.border = \"#000 1px solid\"\n    this.canvas.width = window.innerWidth;\n    this.canvas.style.float = \"left\";\n    this.canvas.height = window.innerHeight;\n    utils.PROJECTOR.setCanvas(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.isStarted = false;\n\n    this.bgRadius = Math.floor(this.canvas.width * 1.2);\n    this.bgCenter = {\n      x: this.canvas.width / 2,\n      y: this.canvas.width * 1.4,\n      // y: this.canvas.height * 2.8\n    };\n\n    this.bgLinearGradient = this.ctx.createLinearGradient(\n      0,\n      0,\n      0,\n      this.canvas.height\n    );\n    this.bgLinearGradient.addColorStop(0, \"white\");\n    this.bgLinearGradient.addColorStop(1, \"black\");\n    this.bgGradient = this.ctx.createRadialGradient(\n      this.bgCenter.x,\n      this.bgCenter.y,\n      this.bgRadius,\n      this.bgCenter.x,\n      this.bgCenter.y,\n      this.bgRadius - 200\n    );\n    this.bgGradient.addColorStop(0, \"#535353\");\n    this.bgGradient.addColorStop(1, \"#a4a4a4\");\n\n    this.gravity = 0.006;\n    this.isStarted = false;\n    this.hasServed = false;\n\n    this.scoreBoardImage = new Image();\n    this.scoreBoardImage.src = \"images/scoreboard.png\";\n    this.scoreBoardImage.onload = () => {\n      this.scoreBoard = {\n        x1: this.canvas.width * 0.1,\n        y1: this.canvas.width * 0.1,\n        x2: this.canvas.width * 0.8,\n        image: this.scoreBoardImage,\n      };\n      this.ctx.drawImage(this.scoreBoardImage, -this.scoreBoardImage.width, 0);\n    };\n\n    this.playImage = new Image();\n    this.playImage.src = \"images/play.png\";\n    this.playImage.onload = () => {\n      this.startButton = {\n        x: (1.75 * this.canvas.width) / 4,\n        y: this.canvas.width * 0.3,\n        width: this.canvas.width / 8,\n        height: this.canvas.width / 8,\n        image: this.playImage,\n        text: \"Start Game\",\n      };\n\n      this.restartButton = {\n        x: (1.75 * this.canvas.width) / 4,\n        y: this.canvas.width * 0.3,\n        width: this.canvas.width / 8,\n        height: this.canvas.width / 8,\n        image: this.playImage,\n        text: \"Play Again\",\n      };\n      this.button = this.startButton;\n\n      this.board = new _Board_js__WEBPACK_IMPORTED_MODULE_0__.Board(this.canvas, this.ctx);\n      this.bat = new _Bat_js__WEBPACK_IMPORTED_MODULE_2__.Bat(this.canvas, this.ctx, this.board);\n      this.ball = new _Ball_js__WEBPACK_IMPORTED_MODULE_1__.Ball(\n        this.ctx,\n        this.board,\n        this.bat.x,\n        utils.BAT_Y_POSITION,\n        10,\n        this.soundsDiv\n      );\n\n      this.board.drawBoard();\n      this.bat.drawBat();\n      this.ball.draw();\n      this.drawButton();\n      this.canvas.addEventListener(\n        \"mousemove\",\n        (evt) => {\n          if (this.isStarted) {\n            evt.preventDefault();\n            // @stanley this is what I'm sending\n            (0,_socket__WEBPACK_IMPORTED_MODULE_4__.sendPlayerMovement)(evt.clientX / this.canvas.width, evt.clientY / this.canvas.height, this.canvas.width, this.canvas.height);\n\n            this.bat.point3d = utils.PROJECTOR.get3d(evt.clientX, evt.clientY);\n            this.bat.x = this.bat.point3d.x;\n            this.bat.y = this.bat.point3d.y;\n            this.bat.z = this.bat.point3d.z;\n\n\n            // this.opponentBat.x = this.bat.point3d.x;\n            // this.opponentBat.y = this.bat.point3d.y;\n            // this.opponentBat.z = this.bat.point3d.z + this.board.netPosition;\n            // console.log(this.bat.point3d.z);\n          } else {\n            evt.preventDefault();\n            this.bat.x = evt.clientX - this.canvas.width * 0.5;\n            this.bat.y = evt.clientY;\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.board.drawBoard();\n            this.ball.draw();\n            this.bat.drawBat();\n            this.drawButton();\n          }\n        },\n        false\n      );\n    };\n\n    this.canvas.addEventListener(\n      \"click\",\n      (e) => {\n        this.handleClick(e);\n      },\n      false\n    );\n    this.soundsDiv = document.createElement(\"div\");\n\n    _socket__WEBPACK_IMPORTED_MODULE_4__.socket.on(\"update\", (room) => {\n      // get the player\n      if (room.name !== _socket__WEBPACK_IMPORTED_MODULE_4__.roomName) {\n        return; // backend ????\n      }\n\n      if (room.primary === _socket__WEBPACK_IMPORTED_MODULE_4__.playerName) {\n        (0,_socket__WEBPACK_IMPORTED_MODULE_4__.setPrimary)(true, true);\n      } else {\n        (0,_socket__WEBPACK_IMPORTED_MODULE_4__.setPrimary)(true, false);\n      }\n      const opponentName = Object.keys(room.players).filter(\n        (p) => p !== _socket__WEBPACK_IMPORTED_MODULE_4__.playerName\n      )[0];\n      if (!opponentName) {\n        return;\n      }\n      const opponent = room.players[opponentName];\n      document.getElementById(\"opponent-name\").innerHTML = opponent.name;\n      console.log(room);\n\n      const {x, y} = opponent;\n      // proportions mulity\n      // @stanley write this code\n      const exactRec = utils.PROJECTOR.get3d(x * opponent.width, y * opponent.height);\n      const received = utils.PROJECTOR.get3d(x * this.canvas.width, y * this.canvas.height);\n\n      this.opponentBat.x = received.x;\n      this.opponentBat.y = received.y;\n      this.opponentBat.z = (2 * this.board.netPosition) - received.z;\n\n      console.log(\"received update\")\n      // this.opponentBat.x = x;\n      // this.opponentBat.y = y;\n      // this.opponentBat.z = z;\n\n      \n    });\n  }\n\n  init() {\n    window.cancelAnimationFrame(this.animationLoop);\n    this.board = new _Board_js__WEBPACK_IMPORTED_MODULE_0__.Board(this.canvas, this.ctx);\n    this.bat = new _Bat_js__WEBPACK_IMPORTED_MODULE_2__.Bat(this.canvas, this.ctx, this.board);\n    this.opponentBat = new _Bat_js__WEBPACK_IMPORTED_MODULE_2__.Bat(this.canvas, this.ctx, this.board);\n    this.opponentBat.z = this.board.length;\n    this.opponentBat.isOpponent = true;\n    this.ball = new _Ball_js__WEBPACK_IMPORTED_MODULE_1__.Ball(\n      this.ctx,\n      this.board,\n      this.bat.x,\n      utils.BAT_Y_POSITION,\n      10,\n      this.soundsDiv\n    );\n    this.timer = 0;\n    this.playerScore = 0;\n    this.opponentScore = 0;\n    this.canvas.style.cursor = \"none\";\n    this.canvas.removeEventListener(\n      \"click\",\n      (e) => {\n        this.handleClick(e);\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"mouseover\",\n      (evt) => {\n        if (this.isStarted) {\n          this.bat.point3d = utils.PROJECTOR.get3d(evt.clientX, evt.clientY);\n          this.bat.x = this.bat.point3d.x;\n          this.bat.y = this.bat.point3d.y;\n          this.bat.z = this.bat.point3d.z;\n\n          this.bat.lastX = this.bat.point3d.x;\n          this.bat.lastZ = this.bat.point3d.z;\n        }\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (evt) => {\n        evt.preventDefault();\n        let touch = evt.touches[0];\n        if (this.isStarted) {\n          this.bat.point3d = utils.PROJECTOR.get3d(touch.pageX, touch.pageY);\n          this.bat.x = this.bat.point3d.x;\n          this.bat.y = this.bat.point3d.y;\n          this.bat.z = this.bat.point3d.z;\n        }\n      },\n      false\n    );\n    this.hasMissed = false;\n    this.isStarted = true;\n    this.animationLoop = window.requestAnimationFrame(() => {\n      this.draw();\n    });\n  }\n  drawButton() {\n    this.ctx.font = \"800 \" + this.canvas.width * 0.1 + \"px Arial\";\n    this.ctx.fillStyle = \"black\";\n    this.lineWidth = this.width * 0.5;\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.fillText(\n      \"Table Tennis 3D\",\n      this.canvas.width * 0.1,\n      this.canvas.height / 6\n    );\n    this.ctx.strokeText(\n      \"Table Tennis 3D\",\n      this.canvas.width * 0.1,\n      this.canvas.height / 6\n    );\n\n    this.ctx.fillStyle = \"#00b248\";\n    this.ctx.drawImage(\n      this.button.image,\n      this.button.x,\n      this.button.y,\n      this.button.width,\n      this.button.height\n    );\n    this.ctx.fillStyle = \"black\";\n    this.ctx.font = \"800 \" + this.canvas.width * 0.02 + \"px Arial\";\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth = \"2\";\n    this.ctx.fillText(this.button.text, this.button.x, this.button.y + 50);\n    this.ctx.strokeText(this.button.text, this.button.x, this.button.y + 50);\n  }\n  handleClick(evt) {\n    if (\n      !this.isStarted &&\n      evt.clientX > this.button.x &&\n      evt.clientX < this.button.x + this.button.width &&\n      evt.clientY > this.button.y &&\n      evt.clientY < this.button.y + this.button.height\n    ) {\n      this.init();\n    }\n  }\n  serve() {\n    this.ball.dx = 0.13 * this.bat.dx;\n    this.ball.dz = 0.13 * this.bat.dz;\n    this.ball.dy = 4;\n    this.hasServed = true;\n    this.justServed = true;\n    this.timer = 0;\n    this.ball.effectAlpha = 1;\n    this.hasMissed = false;\n    this.opponentHasTouched = false;\n    this.bat.y = this.board.y - 50;\n    this.bounceSound = new _Sound_js__WEBPACK_IMPORTED_MODULE_3__.Sound(\"sounds/bounce.mp3\", this.soundsDiv);\n    this.bounceSound.play();\n  }\n  awardPoint() {\n    this.playerScore++;\n    this.hasMissed = true;\n    this.ball.bounceCount = 0;\n    this.ball.opponentBounceCount = 0;\n  }\n  removePoint() {\n    this.opponentScore++;\n    this.hasMissed = true;\n    this.ball.bounceCount = 0;\n    this.ball.opponentBounceCount = 0;\n  }\n\n  getAnotherBall() {\n    this.ball = null;\n\n    this.ball = new _Ball_js__WEBPACK_IMPORTED_MODULE_1__.Ball(\n      this.ctx,\n      this.board,\n      this.bat.x,\n      utils.BAT_Y_POSITION,\n      10,\n      this.soundsDiv\n    );\n    this.timer = 0;\n    this.opponentBat.z = this.board.length;\n    this.hasMissed = false;\n    this.hasServed = false;\n  }\n  drawBackground() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = this.bgLinearGradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.beginPath();\n    this.ctx.arc(\n      this.bgCenter.x,\n      this.bgCenter.y,\n      this.bgRadius,\n      0,\n      Math.PI * 2\n    );\n\n    this.ctx.fillStyle = this.bgGradient;\n    // ctx.fillRect(0, 0, 200, 200);\n    // this.ctx.fillStyle = \"#aa9f7f\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  drawScore() {\n    this.ctx.fillStyle = \"#fff\";\n    this.ctx.strokeStyle = \"#000\";\n    this.ctx.font = \"900 30px Arial\";\n    this.ctx.fillRect(\n      this.scoreBoard.x1,\n      this.scoreBoard.y1 + 6,\n      this.scoreBoard.image.width,\n      this.scoreBoard.image.height - 6\n    );\n    this.ctx.drawImage(\n      this.scoreBoard.image,\n      this.scoreBoard.x1,\n      this.scoreBoard.y1\n    );\n    this.ctx.fillText(\n      \"\" + this.playerScore,\n      this.scoreBoard.x1 + 30,\n      this.scoreBoard.y1 + 45\n    );\n    this.ctx.strokeText(\n      \"\" + this.playerScore,\n      this.scoreBoard.x1 + 30,\n      this.scoreBoard.y1 + 45\n    );\n\n    this.ctx.fillStyle = \"#ff1744\";\n    this.ctx.fillRect(\n      this.scoreBoard.x2,\n      this.scoreBoard.y1 + 6,\n      this.scoreBoard.image.width,\n      this.scoreBoard.image.height - 6\n    );\n    this.ctx.drawImage(\n      this.scoreBoard.image,\n      this.scoreBoard.x2,\n      this.scoreBoard.y1\n    );\n    this.ctx.fillText(\n      \"\" + this.opponentScore,\n      this.scoreBoard.x2 + 30,\n      this.scoreBoard.y1 + 45\n    );\n    this.ctx.strokeText(\n      \"\" + this.opponentScore,\n      this.scoreBoard.x2 + 30,\n      this.scoreBoard.y1 + 45\n    );\n  }\n\n  over() {\n    this.playerScore = 0;\n    this.opponentScore = 0;\n    this.canvas.style.cursor = \"auto\";\n    this.canvas.removeEventListener(\n      \"mouseover\",\n      (evt) => {\n        if (this.isStarted) {\n          this.bat.point3d = utils.PROJECTOR.get3d(evt.clientX, evt.clientY);\n          this.bat.x = this.bat.point3d.x;\n          this.bat.y = this.bat.point3d.y;\n          this.bat.z = this.bat.point3d.z;\n\n          this.bat.lastX = this.bat.point3d.x;\n          this.bat.lastZ = this.bat.point3d.z;\n        }\n      },\n      false\n    );\n\n    this.canvas.removeEventListener(\n      \"mousemove\",\n      (evt) => {\n        if (this.isStarted) {\n          evt.preventDefault();\n          this.bat.point3d = utils.PROJECTOR.get3d(evt.clientX, evt.clientY);\n          this.bat.x = this.bat.point3d.x;\n          this.bat.y = this.bat.point3d.y;\n          this.bat.z = this.bat.point3d.z;\n        }\n      },\n      false\n    );\n\n    this.canvas.removeEventListener(\n      \"touchmove\",\n      (evt) => {\n        evt.preventDefault();\n\n        let touch = evt.touches[0];\n        if (this.isStarted) {\n          this.bat.point3d = utils.PROJECTOR.get3d(touch.pageX, touch.pageY);\n          this.bat.x = this.bat.point3d.x;\n          this.bat.y = this.bat.point3d.y;\n          this.bat.z = this.bat.point3d.z;\n        }\n      },\n      false\n    );\n\n    this.button = this.restartButton;\n    // this.canvas.addEventListener('click', (e) => {\n    //   this.handleClick(e)\n    // }, false);\n    this.drawButton();\n    this.hasServed = false;\n    this.isStarted = false;\n    window.cancelAnimationFrame(this.animationLoop);\n  }\n\n  draw() {\n    if (this.hasServed) this.timer++;\n    this.drawBackground();\n    this.drawScore();\n    this.board.drawBoard();\n    if (this.ball.y < this.board.y - this.ball.r)\n      this.ball.dy += this.gravity * this.timer;\n    // else this.ball.dy = 0;\n    this.ball.updatePosition();\n\n    if (!this.hasMissed) {\n      if (!this.hasServed) this.ball.x = this.bat.x;\n\n      if (this.hasServed) {\n        if (this.opponentHasTouched) {\n          if (\n            this.ball.z < this.bat.z &&\n            this.ball.x > this.bat.x - this.bat.r &&\n            this.ball.x < this.bat.x + this.bat.r &&\n            this.ball.y > this.bat.y - this.bat.r\n          ) {\n            this.ball.bounceCount = 0;\n            this.ball.opponentBounceCount = 0;\n            this.ball.dy = -0.0015 * Math.abs(this.board.length - this.bat.z);\n            this.ball.reflect(this.bat.dx, this.bat.dz * 0.5);\n            this.bounceSound = new _Sound_js__WEBPACK_IMPORTED_MODULE_3__.Sound(\"sounds/bounce.mp3\", this.soundsDiv);\n            this.bounceSound.play();\n            this.timer = 0;\n            this.ball.effectAlpha = 1;\n            this.opponentHasTouched = false;\n          }\n        }\n\n        if (this.justServed && !this.opponentHasTouched) {\n          if (\n            (this.ball.bounceCount == 0 && this.ball.opponentBounceCount > 0) ||\n            (this.ball.bounceCount == 1 &&\n              this.ball.z > this.board.length &&\n              this.ball.opponentBounceCount == 0)\n          ) {\n            this.removePoint();\n          }\n        }\n\n        if (!this.justServed) {\n          if (\n            (!this.opponentHasTouched && this.ball.bounceCount > 0) ||\n            (this.ball.bounceCount == 0 &&\n              this.ball.opponentBounceCount == 0 &&\n              this.ball.z > this.board.length)\n          ) {\n            this.removePoint();\n          }\n        }\n      }\n\n      // //move Opponent Bat\n      // if (this.ball.z > this.board.netPosition) {\n      //   this.opponentBat.x = this.ball.x;\n      //   if (this.ball.opponentBounceCount > 0) {\n      //     this.opponentBat.z = this.ball.z;\n      //     this.ball.reflect(this.opponentBat.dx, this.opponentBat.dz);\n\n      //     if (!this.opponentHasTouched) {\n      //       this.ball.dy = -0.01 * this.opponentBat.z;\n      //       this.bounceSound = new Sound(\"sounds/bounce.mp3\", this.soundsDiv);\n      //       this.bounceSound.play();\n      //       this.opponentHasTouched = true;\n      //       this.ball.bounceCount = 0;\n\n      //       if (this.justServed) {\n      //         this.justServed = false;\n      //       }\n      //     }\n      //   }\n      // } else {\n      //   this.opponentBat.z = this.board.length;\n      // }\n\n      //game logic\n      if (this.ball.bounceCount === 2) {\n        this.removePoint();\n      } else if (this.ball.opponentBounceCount === 2) {\n        this.awardPoint();\n      }\n    }\n\n    this.opponentBat.drawBat(this.hasServed);\n\n    //draw ball only if it is infront of the player\n    if (this.ball.z > -400) {\n      if (!this.board.checkPointBound(this.ball.x, this.ball.y, this.ball.z)) {\n        this.ball.draw();\n      }\n    } else {\n      this.hasServed = false;\n\n      //award or remove point before making new ball\n      if (!this.hasMissed) {\n        if (this.ball.opponentBounceCount == 1 && this.ball.bounceCount == 0) {\n          this.awardPoint();\n        } else if (\n          (this.ball.opponentBounceCount == 1 && this.ball.bounceCount == 1) ||\n          (this.ball.opponentBounceCount == 0 && this.ball.bounceCount == 1)\n        ) {\n          this.removePoint();\n        }\n      }\n      this.getAnotherBall();\n    }\n\n    this.bat.drawBat(this.hasServed);\n\n    //hit effect on ball\n    if (this.ball.effectAlpha > 0) {\n      this.ball.showEffect(this.ball.x, this.ball.y, this.ball.z);\n      this.ball.effectAlpha -= 0.05;\n    }\n\n    if (this.ball.bounceCount > 2 || this.ball.opponentBounceCount > 2) {\n      this.getAnotherBall();\n    }\n\n    if (!this.hasServed && this.bat.dz > 0 && this.bat.z > this.ball.z) {\n      this.serve();\n    }\n\n    if (this.playerScore > 10 || this.opponentScore > 10) {\n      //game over\n      this.over();\n    } else {\n      //next animation frame\n      this.animationLoop = window.requestAnimationFrame(() => {\n        this.draw();\n      });\n    }\n  }\n}\n\n\n//# sourceURL=webpack://js-table-tennis/./js/Game.js?");

/***/ }),

/***/ "./js/Sound.js":
/*!*********************!*\
  !*** ./js/Sound.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sound\": () => (/* binding */ Sound)\n/* harmony export */ });\nclass Sound {\n\n  constructor(src,soundsDiv) {\n    this.sound = document.createElement('audio');\n    this.sound.src = src;\n    this.sound.setAttribute('preload', 'auto');\n    this.sound.setAttribute('controls', 'none');\n    this.sound.style.display = 'none';\n\n    soundsDiv.appendChild(this.sound);\n\n    this.play = function() {\n      this.sound.play();\n    }\n\n    this.stop = function() {\n      this.sound.pause();\n    }\n  }\n\n\n}\n\n\n//# sourceURL=webpack://js-table-tennis/./js/Sound.js?");

/***/ }),

/***/ "./js/socket.js":
/*!**********************!*\
  !*** ./js/socket.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toast\": () => (/* binding */ toast),\n/* harmony export */   \"joinRoom\": () => (/* binding */ joinRoom),\n/* harmony export */   \"sendPlayerMovement\": () => (/* binding */ sendPlayerMovement),\n/* harmony export */   \"sendRoundEnd\": () => (/* binding */ sendRoundEnd),\n/* harmony export */   \"sendBallPosition\": () => (/* binding */ sendBallPosition),\n/* harmony export */   \"setPrimary\": () => (/* binding */ setPrimary),\n/* harmony export */   \"primarySet\": () => (/* binding */ primarySet),\n/* harmony export */   \"isPrimary\": () => (/* binding */ isPrimary),\n/* harmony export */   \"roomName\": () => (/* binding */ roomName),\n/* harmony export */   \"playerName\": () => (/* binding */ playerName),\n/* harmony export */   \"socketInitialized\": () => (/* binding */ socketInitialized),\n/* harmony export */   \"socket\": () => (/* binding */ socket)\n/* harmony export */ });\nconst socket = io(\"ws://localhost:4000\", {\n  reconnectionDelayMax: 10000,\n});\nlet primarySet = false,\n  isPrimary = false;\n  const urlParams = new URLSearchParams(window.location.search);\n\nlet roomName = urlParams.get('roomName') ?? \"\",\n  playerName = urlParams.get('playerName') ?? \"\";\ndocument.getElementById(\"room-name\").value = roomName;\ndocument.getElementById(\"player-name\").value = playerName;\n\nlet socketInitialized = false;\n\nconst toast = (message) => {\n  var x = document.getElementById(\"snackbar\");\n  x.className = \"show\";\n  x.innerHTML = message;\n  setTimeout(function () {\n    x.className = x.className.replace(\"show\", \"\");\n  }, 3000);\n};\n\nconst joinRoom = () => {\n  roomName = document.getElementById(\"room-name\").value;\n  playerName = document.getElementById(\"player-name\").value;\n  if (!roomName || roomName === \"\" || !playerName || playerName === \"\") {\n    toast(\"please enter in all fields!\");\n    return;\n  }\n  toast(`joining ${roomName}!`);\n  document.getElementById(\"player-name-label\").innerHTML = playerName;\n  document.getElementById(\"opponent-name\").innerHTML = \"Waiting for Opponent\";\n  socket.emit(\"join\", {\n    roomName,\n    playerName,\n  });\n\n  socketInitialized = true;\n  document.getElementById(\"play-match\").style.display = \"none\";\n  document.getElementById(\"scorebox\").style.display = \"block\";\n  document.getElementById(\"player-name\").innerText = playerName;\n};\n\ndocument.getElementById(\"join-room-button\").onclick = joinRoom;\n\nconst sendPlayerMovement = (x, y, z, width, height) => {\n  if (socketInitialized) {\n    socket.emit(\"movement\", {\n      roomName,\n      playerName,\n      x,\n      y,\n\t  z,\n\t  width, height\n    });\n  }\n};\n\nconst sendRoundEnd = (score) => {\n  // TODO(@stanley): Do this in server later\n  if (socketInitialized) {\n    socket.emit(\"round-end\", {\n      score\n    });\n  }\n}\n\nconst sendBallPosition = (position) => {\n\tif (socketInitialized) {\n\t\tconsole.log(`sending`)\n\t\tconsole.log(position)\n\t\tsocket.emit(\"updateballposition\", {position});\n\t}\n}\n\nconst setPrimary = (pSet, areWePrimary) => {\n\tprimarySet = pSet;\n\tisPrimary = areWePrimary;\n}\n\n\n\n\n//# sourceURL=webpack://js-table-tennis/./js/socket.js?");

/***/ }),

/***/ "./js/src/app.js":
/*!***********************!*\
  !*** ./js/src/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../socket */ \"./js/socket.js\");\n/* harmony import */ var _Board_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Board.js */ \"./js/Board.js\");\n/* harmony import */ var _Ball_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Ball.js */ \"./js/Ball.js\");\n/* harmony import */ var _Bat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Bat.js */ \"./js/Bat.js\");\n/* harmony import */ var _Game_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Game.js */ \"./js/Game.js\");\n/* harmony import */ var _Sound_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Sound.js */ \"./js/Sound.js\");\n\n\n\n\n\n\nconst utils = __webpack_require__(/*! ../utils.js */ \"./js/utils.js\")\n\n\nlet game = new _Game_js__WEBPACK_IMPORTED_MODULE_4__.Game();\n// game.init();\n\n\n//# sourceURL=webpack://js-table-tennis/./js/src/app.js?");

/***/ }),

/***/ "./js/utils.js":
/*!*********************!*\
  !*** ./js/utils.js ***!
  \*********************/
/***/ ((module) => {

eval("let utils = {\n  PROJECTOR: {\n    cameraPosition: {\n      x: 0,\n      y: -100,\n      z: -400\n    },\n    cameraOrientation: {\n      x: -Math.PI / 4,\n      y: 0,\n      z: 0\n    },\n\n    canvas: {\n      width: null,\n      height: null\n    },\n\n    viewerPosition: {\n      x: 0,\n      y: 0,\n      z: 500\n    },\n\n    eye2plane: 600,\n\n    setCanvas: (canvas) => {\n      utils.PROJECTOR.canvas = canvas;\n      utils.PROJECTOR.viewerPosition.x = -canvas.width *0.5;\n      utils.PROJECTOR.viewerPosition.y = -canvas.width * 0.4;\n    },\n\n    get2d: (x, y, z) => {\n\n      // let scale = utils.PROJECTOR.eye2plane / (utils.PROJECTOR.eye2plane + z);\n      let cx = Math.cos(utils.PROJECTOR.cameraOrientation.x);\n      let sx = Math.sin(utils.PROJECTOR.cameraOrientation.x);\n      let cy = Math.cos(utils.PROJECTOR.cameraOrientation.y);\n      let sy = Math.sin(utils.PROJECTOR.cameraOrientation.y);\n      let cz = Math.cos(utils.PROJECTOR.cameraOrientation.z);\n      let sz = Math.sin(utils.PROJECTOR.cameraOrientation.z);\n\n      let X = (x - utils.PROJECTOR.cameraPosition.x);\n      let Y = (y - utils.PROJECTOR.cameraPosition.y);\n      let Z = (z - utils.PROJECTOR.cameraPosition.z);\n\n      let xWithRespectToCam = cy * (sz * Y + cz * X) - sy * Z;\n      let yWithRespectToCam = sx * (cy * Z + sy * (sz * Y + cz * X)) + cx * (cz * Y - sz * X);\n      let zWithRespectToCam = cx * (cy * Z + sy * (sz * Y + cz * X)) - sx * (cz * Y - sz * X);\n\n      let zWithRespectToCamInverse = 1 / zWithRespectToCam;\n\n      let x2d = xWithRespectToCam * (zWithRespectToCamInverse) * utils.PROJECTOR.viewerPosition.z - utils.PROJECTOR.viewerPosition.x;\n\n      let y2d = yWithRespectToCam * zWithRespectToCamInverse * utils.PROJECTOR.viewerPosition.z - utils.PROJECTOR.viewerPosition.y;\n\n      return {\n        x2d: x2d,\n        y2d: y2d\n      };\n\n    },\n\n    get2dLength: (l, z) => {\n      let scale = utils.PROJECTOR.eye2plane / (utils.PROJECTOR.eye2plane + z);\n\n      return l * scale;\n    },\n\n    get3d: (x2d, y2d) => {\n\n      let cx = Math.cos(utils.PROJECTOR.cameraOrientation.x);\n      let sx = Math.sin(utils.PROJECTOR.cameraOrientation.x);\n      let cy = Math.cos(utils.PROJECTOR.cameraOrientation.y);\n      let sy = Math.sin(utils.PROJECTOR.cameraOrientation.y);\n      let cz = Math.cos(utils.PROJECTOR.cameraOrientation.z);\n      let sz = Math.sin(utils.PROJECTOR.cameraOrientation.z);\n\n      let y =   utils.BAT_Y_POSITION;\n\n\n      let Y = (y - utils.PROJECTOR.cameraPosition.y);\n\n      let numeratorZ = Y * -1 * (utils.PROJECTOR.viewerPosition.z * cx * cz + y2d * sx * cz + utils.PROJECTOR.viewerPosition.y * sx * cz)\n      let denumeratorZ = cy * (utils.PROJECTOR.viewerPosition.z * sx - y2d * cx - utils.PROJECTOR.viewerPosition.y * cx)\n      let Z = numeratorZ / denumeratorZ;\n\n\n      let numeratorX = (x2d + utils.PROJECTOR.viewerPosition.x) * (cx * cy * Z - sx * cz * Y);\n      let denumeratorX = utils.PROJECTOR.viewerPosition.z * cy * cz;\n\n      let X = numeratorX / denumeratorX;\n\n      let x = X + utils.PROJECTOR.cameraPosition.x;\n      let z = Z + utils.PROJECTOR.cameraPosition.z;\n      return {\n        x: Math.floor(x),\n        y: Math.floor(y),\n        z: Math.floor(z)\n      };\n\n    },\n\n  },\n\n  BAT_Y_POSITION: 200,\n\n}\n\nmodule.exports = utils;\n\n\n//# sourceURL=webpack://js-table-tennis/./js/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./js/src/app.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;